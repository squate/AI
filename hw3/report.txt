Nathaniel Levy and Alan Sato

first problem:
    DFS: SACDG, path: SACG
    BFS: SABDCG, path: SDG
    UCS: SABDCG, path: SDG
    Greedy: SACDG, path: SACDG
    A*: SADBCG, path: SDG
BFS
    Average steps: 26.987
    %success: 77
    strengths: tends to find *a* path more often than some competitors
    weaknesses: takes a hot while to get there, not optimized for anything
                except looking  at every element in a predetermined order

DFS
    avg steps: 17.815
    %success: 65
    strengths: less work than BFS when it works
    weaknesses: less success than BFS, lack of optimization, it simply looks
                at everything in a specific order as opposed to making informed
                decisions

UCS
    avg steps: 10.9
    % success: 73
    strengths: seems to work as well as any other algorithm with less wasted effort

Greedy
    avg steps: almost always 10, which is the absolute minimum
    success: a smidgen over 50%
    strengths: when it works, it REEEAAAALLY works
    weaknesses: gets in its own way, gets stuck in loops like half of the time

A*:
    avg steps: 28
    avg cost: 62.02 (an algorithm that didn't take cost into account would generally run about 106)
    % success: 69
    strengths: can account for cost, as successful as any other algorithm, really
    weaknesses: long runtime, more steps than any other alg.
